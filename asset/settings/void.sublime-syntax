%YAML 1.2
name: V O I D
file_extensions:
  - void
scope: source.void

contexts:
  main:
    - match: >
        ^\t*(['"])(.*?)(['"]:)(.*?)$
      captures:
        1: punctuation.definition.string
        2: string.quoted
        3: punctuation.definition.string
        4: constant.numeric

    - match: '^\t*"'
      scope: punctuation.definition.string.begin
      push: quoted_text

    - match: "^\t*'"
      scope: punctuation.definition.string.begin
      push: quoted_single_text

    - match: "^\t*\\[.*$"
      scope: string.quoted

    - match: >
        ^\t*.?[ ]?[+-]?[0-9][0-9_., "']*?[%]?( \w*)?$
      scope: constant.numeric

    - match: '^\t*(http[s]?://.*?$)'
      captures:
        1: markup.underline.link

    - match: '^\t*([0-9a-zA-Z-_]+@[0-9a-zA-Z-_.]+$)'
      captures:
        1: markup.underline.link

    - match: '^\t*(\+[0-9- \(\)]{5,}$)'
      captures:
        1: markup.underline.link

    - match: '^\t*(?:true|false)$'
      scope: constant.language.boolean

    - match: '^\t*(?:none)$'
      scope: constant.language.null

    - match: >
        ^(?:(\t){2})*[^\t"'\[].*?$
      scope: variable.odd

    - match: >
        ^\t(?:(\t){2})*[^\t"'\[].*?$
      scope: variable.even

    - match: >
        ^\t*[^"'\[].*?$
      scope: variable.odd

  quoted_text:
    - meta_scope: string.quoted
    
    - match: '("|$)'
      scope: punctuation.definition.string.end
      pop: true

    - match: '.+?'
      scope: string.quoted

  quoted_single_text:
    - meta_scope: string.quoted
    
    - match: "('|$)"
      scope: punctuation.definition.string.end
      pop: true

    - match: '.+?'
      scope: string.quoted